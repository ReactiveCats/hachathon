basePath: /api
definitions:
  domain.Task:
    properties:
      complexity:
        type: string
      description:
        type: string
      hardDeadline:
        type: string
      id:
        type: integer
      priority:
        type: string
      softDeadline:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for hackathon project
  title: HackathonAPI
  version: "0.1"
paths:
  /task:
    get:
      description: Get all user tasks
      operationId: get_tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Task'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all user tasks
      tags:
      - tasks
  /task/{task_id}:
    get:
      description: Get task by id
      operationId: get_task_by_id
      parameters:
      - description: task id
        in: query
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Task'
      security:
      - ApiKeyAuth: []
      summary: Get task by id
      tags:
      - tasks
  /tasks:
    post:
      description: Add new task
      operationId: post_task
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Task'
      security:
      - ApiKeyAuth: []
      summary: Add new task
      tags:
      - tasks
  /tasks/{task_id}:
    delete:
      description: Get list of tasks
      operationId: delete_task
      parameters:
      - description: task id
        in: query
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Get list of tasks
      tags:
      - tasks
    put:
      description: Edit task
      operationId: put_task
      parameters:
      - description: task id
        in: query
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Task'
      security:
      - ApiKeyAuth: []
      summary: Edit task
      tags:
      - tasks
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Token
    type: apiKey
swagger: "2.0"
tags:
- description: Authorization endpoints
  name: auth
- description: Tasks endpoints
  name: tasks
